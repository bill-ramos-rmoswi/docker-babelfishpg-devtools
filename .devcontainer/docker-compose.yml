services:
  babelfish:
    # Option 1: Use pre-built image (uncomment if you built manually)
    image: babelfishpg-devtools:latest
    # Option 2: Build from Dockerfile (comment out if using pre-built)
    # build: 
    #   context: ..
    #   dockerfile: Dockerfile
    volumes:
      # Mount workspace
      - ..:/workspace:cached
      # Persist Babelfish data
      - babelfish-data:/var/lib/babelfish/data
      # Persist backup directory
      - babelfish-backups:/var/lib/babelfish/bbf_backups
    environment:
      # PostgreSQL/Babelfish connection settings
      - PGHOST=localhost
      - PGPORT=5432
      - PGDATABASE=${BABELFISH_DATABASE:-babelfish_db}
      - PGUSER=${BABELFISH_USER:-babelfish_admin}
      - PGPASSWORD=${BABELFISH_PASSWORD:-secret_password}
      # Babelfish initialization settings
      - BABELFISH_USER=${BABELFISH_USER:-babelfish_admin}
      - BABELFISH_PASSWORD=${BABELFISH_PASSWORD:-secret_password}
      - BABELFISH_DATABASE=${BABELFISH_DATABASE:-babelfish_db}
      - ROOT_PASSWORD=${ROOT_PASSWORD:-postgres}
      # Babelfish TDS settings
      - BABELFISH_TDS_PORT=1433
      # Locale settings
      - LC_ALL=C
      - LANG=C
      - LANGUAGE=C
    ports:
      # Map container ports to host ports to avoid conflicts
      - "3341:1433"  # Babelfish TDS (SQL Server protocol) - host:container
      - "2345:5432"  # PostgreSQL native - host:container
      - "2223:22"    # SSH - host:container
    networks:
      - babelfish-network
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    # Default command (uses environment variables or defaults)
    command: /start.sh

volumes:
  babelfish-data:
    driver: local
  babelfish-backups:
    driver: local

networks:
  babelfish-network:
    driver: bridge